// Code generated by MockGen. DO NOT EDIT.
// Source: Spec_full_file_example_test.go

// Package testcase_test is a generated GoMock package.
package testcase_test

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInterfaceExample is a mock of RoleInterface interface
type MockInterfaceExample struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceExampleMockRecorder
}

// MockInterfaceExampleMockRecorder is the mock recorder for MockInterfaceExample
type MockInterfaceExampleMockRecorder struct {
	mock *MockInterfaceExample
}

// NewMockInterfaceExample creates a new mock instance
func NewMockInterfaceExample(ctrl *gomock.Controller) *MockInterfaceExample {
	mock := &MockInterfaceExample{ctrl: ctrl}
	mock.recorder = &MockInterfaceExampleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterfaceExample) EXPECT() *MockInterfaceExampleMockRecorder {
	return m.recorder
}

// Say mocks base method
func (m *MockInterfaceExample) Say() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Say")
	ret0, _ := ret[0].(string)
	return ret0
}

// Say indicates an expected call of Say
func (mr *MockInterfaceExampleMockRecorder) Say() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Say", reflect.TypeOf((*MockInterfaceExample)(nil).Say))
}
