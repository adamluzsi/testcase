#!/usr/bin/env bash
set -e

(
	type go
	type example-output
) 1>/dev/null

function main() {
	testEmptyName

	example-output \
		| extractTestNames \
		| testTestNames
}

function extractTestNames() {
	local line
	while read -r line; do
		if [[ ${line} =~ RUN\ +([^\ ]+) ]]; then
			echo "${BASH_REMATCH[1]}"
		fi
	done
}

function testTestNames() {
	local cmd name failed
	while read -r name; do
		cmd="go test -v -run ${name}"
		if ! eval "${cmd}" | grep --quiet --fixed-strings --regexp "PASS: ${name}"; then
			failed="TRUE"
			echo "FAIL: ${cmd}"
		else
			echo "PASS: ${cmd}"
		fi
	done
	[[ -z ${failed:-} ]]
}

function testEmptyName() (
	if [[ -n ${WDP:-} ]]; then
		cd "${WDP}"
	fi
	assert() {
		local testName=${1} expected=${2}
		cmd="go test -v -run ${testName} ./internal/fixtures"
		output=$(${cmd})
		if [[ ${output} == *"${expected}"* ]] && [[ ! ${output} =~ no\ tests\ to\ run ]]; then
			echo "PASS: ${cmd}"
		else
			failed="TRUE"
			echo "FAIL: ${cmd}"
		fi
		[[ -z ${failed:-} ]]
	}

	assert "TestFixtureOutput/test_output_test.go:15" "foo"
	assert "TestFixtureOutput/test_output_test.go:16" "bar"
	assert "TestFixtureOutput/test_output_test.go:17" "baz"
)

main
